// Generated by ts-to-zod
import { z } from 'zod'

export const authorSchema = z.object({
  _type: z.literal('author'),
  _id: z.string(),
  _rev: z.string(),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  name: z.string(),
  picture: z.object({
    _type: z.literal('image'),
    asset: z.object({
      _ref: z.literal('sanity.imageAsset'),
      _type: z.literal('reference'),
    }),
    crop: z.object({
      _type: z.literal('sanity.imageCrop'),
      top: z.number(),
      bottom: z.number(),
      left: z.number(),
      right: z.number(),
    }),
    hotspot: z.object({
      _type: z.literal('sanity.imageHotspot'),
      x: z.number(),
      y: z.number(),
      height: z.number(),
      width: z.number(),
    }),
    alt: z.string(),
  }),
})

export const postSchema = z.object({
  _type: z.literal('post'),
  _id: z.string(),
  _rev: z.string(),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  title: z.string(),
  slug: z.object({
    _type: z.literal('slug'),
    current: z.string(),
    source: z.string(),
  }),
  content: z.array(
    z.object({
      _type: z.literal('image'),
      asset: z.object({
        _ref: z.literal('sanity.imageAsset'),
        _type: z.literal('reference'),
      }),
      crop: z.object({
        _type: z.literal('sanity.imageCrop'),
        top: z.number(),
        bottom: z.number(),
        left: z.number(),
        right: z.number(),
      }),
      hotspot: z.object({
        _type: z.literal('sanity.imageHotspot'),
        x: z.number(),
        y: z.number(),
        height: z.number(),
        width: z.number(),
      }),
      caption: z.string(),
      alt: z.string(),
    })
  ),
  excerpt: z.string(),
  coverImage: z.object({
    _type: z.literal('image'),
    asset: z.object({
      _ref: z.literal('sanity.imageAsset'),
      _type: z.literal('reference'),
    }),
    crop: z.object({
      _type: z.literal('sanity.imageCrop'),
      top: z.number(),
      bottom: z.number(),
      left: z.number(),
      right: z.number(),
    }),
    hotspot: z.object({
      _type: z.literal('sanity.imageHotspot'),
      x: z.number(),
      y: z.number(),
      height: z.number(),
      width: z.number(),
    }),
  }),
  date: z.string(),
  author: z.object({
    _key: z.string(),
    _type: z.literal('reference'),
    _ref: z.literal('author'),
    _strengthenOnPublish: z.object({
      template: z.object({
        id: z.literal('undefined'),
      }),
      type: z.literal('undefined'),
      weak: z.literal(false),
    }),
  }),
})

export const settingsSchema = z.object({
  _type: z.literal('settings'),
  _id: z.string(),
  _rev: z.string(),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  title: z.string(),
  ogImage: z.object({
    title: z.string(),
  }),
})

export const sanityImageAssetSchema = z.object({
  _type: z.literal('sanity.imageAsset'),
  _id: z.string(),
  _rev: z.string(),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  originalFilename: z.string(),
  label: z.string(),
  title: z.string(),
  description: z.string(),
  altText: z.string(),
  sha1hash: z.string(),
  extension: z.string(),
  mimeType: z.string(),
  size: z.number(),
  assetId: z.string(),
  uploadId: z.string(),
  path: z.string(),
  url: z.string(),
  metadata: z.object({
    _type: z.literal('sanity.imageMetadata'),
    location: z.object({
      _type: z.literal('geopoint'),
      lat: z.number(),
      lng: z.number(),
      alt: z.number(),
    }),
    dimensions: z.object({
      _type: z.literal('sanity.imageDimensions'),
      height: z.number(),
      width: z.number(),
      aspectRatio: z.number(),
    }),
    palette: z.object({
      _type: z.literal('sanity.imagePalette'),
      darkMuted: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
      lightVibrant: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
      darkVibrant: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
      vibrant: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
      dominant: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
      lightMuted: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
      muted: z.object({
        _type: z.literal('sanity.imagePaletteSwatch'),
        background: z.string(),
        foreground: z.string(),
        population: z.number(),
        title: z.string(),
      }),
    }),
    lqip: z.string(),
    blurHash: z.string(),
    hasAlpha: z.boolean(),
    isOpaque: z.boolean(),
  }),
  source: z.object({
    _type: z.literal('sanity.assetSourceData'),
    name: z.string(),
    id: z.string(),
    url: z.string(),
  }),
})

export const sanityFileAssetSchema = z.object({
  _type: z.literal('sanity.fileAsset'),
  _id: z.string(),
  _rev: z.string(),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  originalFilename: z.string(),
  label: z.string(),
  title: z.string(),
  description: z.string(),
  altText: z.string(),
  sha1hash: z.string(),
  extension: z.string(),
  mimeType: z.string(),
  size: z.number(),
  assetId: z.string(),
  path: z.string(),
  url: z.string(),
  source: z.object({
    _type: z.literal('sanity.assetSourceData'),
    name: z.string(),
    id: z.string(),
    url: z.string(),
  }),
})
